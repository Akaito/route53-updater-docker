<?xml version="1.0" encoding="utf-8"?>
<Container>
  <Beta>False</Beta>
  <Category>Network:DNS</Category>
  <Date>2019-07-12</Date>
  <Changes>
[font size=3]2019.03.09[/font]
- Initial version.
[font size=3]2019.07.12[/font]
- Try to catch IOError -3 ("Try again") by sleeping and trying again later.
  </Changes>



  <Name>Route53-Updater</Name>
  <Description>
    Keep a Route53 A record and wilcard A record up to date for finding your home (or wherever) network.  Similar to using DuckDNS, but instead using your own Amazon Web Services (AWS) Route53 records.
  </Description>
  <Registry>https://registry.hub.docker.com/u/codesaru/route53-updater/</Registry>
  <Repository>codesaru/route53-updater</Repository>
  <BindTime>true</BindTime>
  <Privileged>false</Privileged>
  <Environment>
      <Variable>
          <Name>DNS_NAME</Name>
          <Value>your.domain.com</Value>
      </Variable>
      <Variable>
          <Name>R53_HOSTED_ZONE_ID</Name>
          <Value>hosted-zone-id</Value>
      </Variable>
      <Variable>
          <Name>AWS_ACCESS_KEY_ID</Name>
          <Value>key-id</Value>
      </Variable>
      <Variable>
          <Name>AWS_SECRET_ACCESS_KEY</Name>
          <Value>secret</Value>
      </Variable>
      <Variable>
          <Name>AWS_DEFAULT_REGION</Name>
          <Value>us-east-1</Value>
      </Variable>
      <Variable>
          <Name>TTL_SECONDS</Name>
          <Value>300</Value>
      </Variable>
      <Variable>
          <Name>KEEP_CONTAINER_ALIVE</Name>
          <Value>true</Value>
          <Description>If 'true', sleep in Python and update occasionally.  Otherwise update and quit, and it's up to you to schedule runs of the container.</Description>
      </Variable>
  </Environment>
  <Networking>
    <Mode>bridge</Mode>
    <Publish/>
  </Networking>
  <Data/>
  <WebUI/>
  <Icon/>
  <ExtraParams></ExtraParams>
</Container>

